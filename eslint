    // 要求可以使用camelcase(大驼峰)和underscores(下划线)
    'camelcase': [2, { 'properties': 'never' }],
    // 要求缩进为制表符tab
    'indent': [2, 'tab'],
    // 禁止混合空格和制表符缩进
    'no-mixed-spaces-and-tabs': 2,
    // 要求执行单行块{}内前后都有空格
    'block-spacing': [2, 'always'],
    // 要求中缀运算符有空格
    'space-infix-ops': 2,
    // *在yield*表达式周围加空格
    'yield-star-spacing': [2, 'both'],
    // 要求在关键字之前和之后都有空格
    'keyword-spacing': [2, { 'before': true, 'after': true }],
    // 要求箭头函数的箭头前后都有空格
    'arrow-spacing': [2, { 'before': true, 'after': true }],
    // 要求逗号前无空格，逗号后面有空格
    'comma-spacing': [2, { 'before': false, 'after': true }],
    // 分号前无空格，后有空格
    'semi-spacing': [2, { 'before': false, 'after': true }],
    // 要求对象的键和冒号之间无空格，冒号和对象的值之间有空格
    'key-spacing': [2, { 'beforeColon': false, 'afterColon': true }],
    // 在{}之前需要一个空格
    'space-before-blocks': [2, 'always'],
    // 禁止括号()内的空格
    'space-in-parens': [2, 'never'],
    // 禁止函数标识符与调用之间空格
    'func-call-spacing': [2, 'never'],
    // 禁止函数括号之前空格
    'space-before-function-paren': [2, 'never'],
    // 禁止属性之前空格
    'no-whitespace-before-property': 2,
    // 禁止...运算符及其表达式之间的空格
    'rest-spread-spacing': [2, 'never'],
    // 禁止在一元运算符之前/之后使用空格
    'space-unary-ops': [2, { 'words': true, 'nonwords': false }],
    // 禁止在行尾添加尾随空格
    'no-trailing-spaces': 2,
    // 禁止连续多个空格
    'no-multi-spaces': 2,
    // 在模板字符串``中{}不能有空格
    'template-curly-spacing': [2, 'never'],
    // 禁止在正则表达式文字中使用多个空格
    'no-regex-spaces': 2,
    // 要求文件末尾无换行符
    'eol-last': [2, 'never'],
    //  在块语句{}开始和结束处禁止空行
    'padded-blocks': [2, 'never'],
    // 禁止有多个空行，最大4行
    'no-multiple-empty-lines': [2, { 'max': 4 }],
    // 要求大括号{}样式为1tbs，左大括号{与前面的内容放在同一行
    'brace-style': [2, '1tbs', { 'allowSingleLine': true }],
    // 要求允许对象所有键和值在同一行上
    'object-property-newline': [2, { 'allowMultiplePropertiesPerLine': true }],
    // 禁止尾随逗号
    'comma-dangle': [2, 'never'],
    // 禁止使用无序逗号
    'no-sequences': 2,
    // 要求逗号放在第一行结尾
    'comma-style': [2, 'last'],
    // 禁用分号
    'semi': 0,
    // 要求点与对象位于同一行
    'dot-location': [2, 'object'],
    // 禁止不必要的括号
    'no-extra-parens': [2, 'functions'],
    // 要求调用一个无参数的构造函数时有括号
    'new-parens': 2,
    // 要求包裹IIFE()()
    'wrap-iife': [2, 'any', { 'functionPrototypeMethods': true }],
    // 禁止不必要的嵌套块{}
    'no-lone-blocks': 2,
    // 禁止重新声明变量
    'no-redeclare': 2,
    // 禁止在function定义重复的参数
    'no-dupe-args': 2,
    // 禁止重复声明function
    'no-func-assign': 2,
    // 禁止在对象中重复使用key
    'no-dupe-keys': 2,
    // 禁止在class成员中重复使用名称
    'no-dupe-class-members': 2,
    // 禁止在switch case重复使用case
    'no-duplicate-case': 2,
    // 禁止从相同路径重复import
    'no-duplicate-imports': 2,
    // 禁止将import，export和解构分配重命名为相同的名称
    'no-useless-rename': 2,
    // 禁止重复使用label语句
    'no-labels': [2, { 'allowLoop': false, 'allowSwitch': false }],
    // 禁止删除变量
    'no-delete-var': 2,
    // 禁止修改类声明的class-assign变量
    'no-class-assign': 2,
    // 禁止修改使用const声明的变量
    'no-const-assign': 2,
    // 禁止与变量名称相同的标签
    'no-label-var': 2,
    // 禁止有未声明的全局变量
    'no-undef': 2,
    // 要求初始化值不能为undefined
    'no-undef-init': 2,
    // 禁止有未使用的变量，可以有未使用的函数参数
    'no-unused-vars': [2, { 'vars': 'all', 'args': 'none' }],
    // 禁止变量名或函数名为NaN，Infinity，undefined
    'no-shadow-restricted-names': 2,
    // 禁止使用__proto__
    'no-proto': 2,
    // 禁止使用eval函数
    'no-eval': 2,
    // 禁止setTimeout()和setInterval()第一个参数为字符串
    'no-implied-eval': 2,
    // 禁止使用arguments.caller和arguments.callee
    'no-caller': 2,
    // 禁止在嵌套块中声明function
    'no-inner-declarations': [2, 'functions'],
    // 禁止额外的函数绑定
    'no-extra-bind': 2,
    // 禁止使用undefined,null等不必要的的.call()和.apply()
    'no-useless-call': 2,
    // 要求派生类的构造函数必须调用super(),非派生类的构造函数不得调用super()
    'constructor-super': 2,
    // 要求在调用构造函数中使用this/super之前收到通知super()
    'no-this-before-super': 2,
    // 要求回调函数参数有err或error时有错误处理
    'handle-callback-err': [ 2, '^(err|error)$' ],
    // 要求异常抛出的内容是Error对象的文字
    'no-throw-literal': 2,
    // 禁止使用Array构造函数
    'no-array-constructor': 2,
    // 禁止调用Math，JSON和Reflect对象
    'no-obj-calls': 2,
    // 禁止扩展原生对象
    'no-extend-native': 2,
    // 禁止重新分配原生对象
    'no-native-reassign': 2,
    // 禁止在正则表达式中使用控制字符(数字后有字母)
    'no-control-regex': 2,
    // 禁止在正则表达式中使用空数组
    'no-empty-character-class': 2,
    // 禁止在RegExp构造函数中使用无效的正则表达式字符串
    'no-invalid-regexp': 2,
    // 要求new构造函数储存到变量
    'no-new': 2,
    // 禁止 Function构造函数在JavaScript中创建函数
    'no-new-func': 2,
    // 禁止new Object
    'no-new-object': 2,
    // 禁止使用new require
    'no-new-require': 2,
    // 禁止使用new Symbol
    'no-new-symbol': 2,
    // 禁止new String，Number和Boolean
    'no-new-wrappers': 2,
    // 要求构造函数名在有new操作符时可以大小写，无new操作符必须大写。
    'new-cap': [2, { 'newIsCap': true, 'capIsNew': false }],
    // 要求getter/setter成对出现在对象中
    'accessor-pairs': 2,
    // 禁止使用debugger
    'no-debugger': 2,
    // 禁止使用八进制
    'no-octal': 2,
    // 禁止使用字符串中的八进制转义序列
    'no-octal-escape': 2,
    // 要求不能使用浮动小数
    'no-floating-decimal': 2,
    // 禁止不合规则的空白
    'no-irregular-whitespace': 2,
    // 要求使用__dirname和__filename时不允许字符串连接
    'no-path-concat': 2,
    // 要求return在返回值时有计算加圆括号
    'no-return-assign': [2, 'except-parens'],
    // 要求条件语句及循环语句省略遵守多行模式
    'curly': [2, 'multi-line'],
    // 禁止条件语句中使用赋值运算符
    'no-cond-assign': 2,
    // 禁止循环中的常量表达式为true以外的常量
    'no-constant-condition': [2, { 'checkLoops': false }],
    // 禁止在try catch的catch里赋值
    'no-ex-assign': 2,
    // 禁止自我赋值
    'no-self-assign': 2,
    // 禁止自我比较
    'no-self-compare': 2,
    // 禁止修改只读全局变量
    'no-global-assign': 2,
    // 可以智能判断使用==和！=
    'eqeqeq': [2, 'smart'],
    // 禁止空的解构赋值
    'no-empty-pattern': 2,
    // 禁止不必要的布尔转换
    'no-extra-boolean-cast': 2,
    // 要求不能有迭代器
    'no-iterator': 2,
    // 禁止使用稀疏数组
    'no-sparse-arrays': 2,
    // 禁止混淆的多行表达式
    'no-unexpected-multiline': 2,
    // 禁止不必要的转义\
    'no-useless-escape': 2,
    // 禁止使用多行字符串\,可以\n
    'no-multi-str': 2,
    // 禁止使用制表符/ t
    'no-tabs': 2,
    // 要求在有${}时用``而不是''
    'no-template-curly-in-string': 2,
    // 禁止在return，throw，continue，和break语句后面写代码
    'no-unreachable': 2,
    // 禁止在finally里面写return，throw，break，或continue
    'no-unsafe-finally': 2,
    // 禁止修改循环中的引用变量
    'no-unmodified-loop-condition': 2,
    // 要求不能在有更简单的选择时使用三元运算符
    'no-unneeded-ternary': [2, { 'defaultAssignment': false }],
    // 禁止在in和instanceof 的左操作数前加！
    'no-unsafe-negation': 2,
    // 禁止否定in表达式中的左操作数
    'no-negated-in-lhs': 2,
    // 要求每个switch case语句都应该有一个结束
    'no-fallthrough': 2,
    // 禁止不必要地使用计算属性键[]
    'no-useless-computed-key': 2,
    // 禁止不必要的构造函数
    'no-useless-constructor': 2,
    // 禁止with声明
    'no-with': 2,
    // 强制将typeof表达式与有效字符串进行比较
    'valid-typeof': 2,
    // 要求文件不得以Unicode BOM开头
    'unicode-bom': [2, 'never'],
    // 要求isNaN()在检查时需要调用NaN
    'use-isnan': 2,
    // 禁止Yoda条件,因为条件的字面值首先出现，而变量出现在第二位
    'yoda': [2, 'never'],
    // 要求每个作用域的初始化变量有多个变量声明
    'one-var': [2, { 'initialized': 'never' }],
    // 要求可以使用三元运算符的换行
    'operator-linebreak': [2, 'after', { 'overrides': { '?': 'before', ':': 'before' } }],
    // 要求允许字符串使用单引号、双引号或反引号
    'quotes': [2, 'single', { 'avoidEscape': true, 'allowTemplateLiterals': true }],
    // 要求//或者/*必须至少有一个空白
    'spaced-comment': [2, 'always', { 'line': { 'markers': ['*package', '!', ','] }, 'block': { 'balanced': true, 'markers': ['*package', '!', ','], 'exceptions': ['*'] } }]
